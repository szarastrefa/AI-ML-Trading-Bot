version: '3.8'

services:
  trading-bot:
    build: .
    container_name: ai_ml_trading_bot
    ports:
      - "8000:8000"  # FastAPI
      - "8080:8080"  # Web UI
    environment:
      - ENV=production
      - DEBUG=false
      - DATABASE_URL=postgresql://trading:trading123@postgres:5432/trading_bot
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
      - PYTHON_VERSION=3.10
    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - ./logs:/app/data/logs
      - trading_models:/app/data/models
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: ["/bin/bash", "/app/scripts/start.sh"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: trading_bot_postgres
    environment:
      - POSTGRES_DB=trading_bot
      - POSTGRES_USER=trading
      - POSTGRES_PASSWORD=trading123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trading -d trading_bot"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: trading_bot_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  trading_models: